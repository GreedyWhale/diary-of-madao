@import '~/assets/styles/mixin.scss';

$bgColor: #2a274d;
$themes: (
  'success': (
    'background-color': rgba(49, 218, 134, 0.35),
    'color': #24df78
  ),
  'fail': (
    'background-color': rgba(253, 18, 84, 0.35),
    'color': #fc1153
  ),
);
$easeOutSine: cubic-bezier(0.39, 0.575, 0.565, 1);

.notificationWrap {
  position: fixed;
  right: 0;
  top: 40px;
  @include zIndex(breakingThroughTheSky, 1);
  .notification {
    background: #2a274d;
    padding: 5px 25px;
    width: 380px;
    min-height: 130px;
    border-radius: 8px;
    margin: 0 24px 24px 0;
    display: flex;
    align-items: center;
    .content {
      display: flex;
      flex-direction: column;
      justify-content: center;
      flex: 1;
      .title {
        display: flex;
        align-items: center;
        justify-content: space-between;
        margin-bottom: 10px;
        h3 {
          font-size: 16px;
          flex: 1;
        }
        button {
          width: 16px;
          height: 16px;
          background: url('~/assets/images/close.png') no-repeat center / 100%;
          cursor: pointer;
          border: none;
          outline: none;
        }
      }
      > p {
        color: #aeaaca;
        word-break: break-all;
        font-size: 14px;
      }
    }
    > span {
      width: 32px;
      height: 32px;
      margin-right: 30px;
      flex: none;
    }
    @each $theme, $value in $themes {
      &[data-theme="#{$theme}"] {
        background: linear-gradient(to right, map-get($value, 'background-color'), $bgColor 45%);
        .content {
          .title {
            h3 {
              color: map-get($value, 'color');
            }
          }
        }
        > span {
          background: url('~/assets/images/#{$theme}.png') no-repeat center / 100%;
        }
      }
    }
  }
}

.notificationAnimation {
  &Enter {
    transform: translateX(100%);
  }
  &EnterActive {
    transform: translateX(0);
    transition: all 300ms $easeOutSine;
  }
  &Exit {
    transform: translateX(0);
  }
  &ExitActive {
    transform: translateX(100%);
    transition: all 300ms $easeOutSine;
  }
}

@media screen and (max-width: 400px) {
  .notificationWrap {
    .notification {
      width: calc(100vw - 24px * 2);
    }
  }
}